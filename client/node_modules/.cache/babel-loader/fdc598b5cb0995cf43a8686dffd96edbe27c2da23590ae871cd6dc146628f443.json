{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joebr_000.HP\\\\Desktop\\\\University\\\\Final year\\\\Final year project\\\\commerical-web-app\\\\client\\\\src\\\\components\\\\date-select.component.js\";\n//This component is a date selecting widget.\nimport React, { Component } from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n//FontAwesome icons for buttons\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons';\n\n//Loading configuration\nimport configData from '../config/barber-site.config.json';\n\n//Loading all styling modules\nimport staticFeatures from \"../css-modules/static.module.css\";\nimport modernStyle from \"../css-modules/modern.module.css\";\n\n//Determine website styling module from the config file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst websiteStyle = function () {\n  if (configData.STYLE === \"modern\") {\n    return modernStyle;\n  }\n}();\n\n//This is needed data for the date selector\n\nconst months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nconst daysInEachMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nvar currentDate = new Date();\nvar currentYear = currentDate.getFullYear();\nvar currentMonth = months[parseInt(String(currentDate.getMonth() + 1).padStart(2, '0') - 1)];\nvar currentMonthIndex = parseInt(String(currentDate.getMonth() + 1).padStart(2, '0') - 1);\nvar currentDay = String(currentDate.getDate()).padStart(2, '0');\nconsole.log(currentMonthIndex);\n\n//Generating JSX for date select grid.\nfunction generateDaySelectJSX(monthIndex) {\n  var JSXforDayArray = [];\n\n  //Conditional statements for button active or disabled depending on the days in the selected month, and whether it is past that date in time\n  var dayIndex;\n  if (monthIndex > currentMonthIndex) {\n    dayIndex = 0;\n  } else if (monthIndex == currentMonthIndex) {\n    dayIndex = currentDay;\n  } else if (monthIndex < currentMonthIndex) {\n    dayIndex = 32;\n  }\n  for (let day = 1; day < 32; day++) {\n    if (daysInEachMonth[monthIndex] == 28) {\n      if (day >= dayIndex && day < 29) {\n        JSXforDayArray.push( /*#__PURE__*/_jsxDEV(\"button\", {\n          className: websiteStyle.dayButton,\n          type: \"button\",\n          children: day\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }, this));\n      } else {\n        JSXforDayArray.push( /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: true,\n          className: websiteStyle.dayButton,\n          type: \"button\",\n          children: day\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }, this));\n      }\n    } else if (daysInEachMonth[monthIndex] == 30) {\n      if (day >= dayIndex && day < 31) {\n        JSXforDayArray.push( /*#__PURE__*/_jsxDEV(\"button\", {\n          className: websiteStyle.dayButton,\n          type: \"button\",\n          children: day\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }, this));\n      } else {\n        JSXforDayArray.push( /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: true,\n          className: websiteStyle.dayButton,\n          type: \"button\",\n          children: day\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }, this));\n      }\n    } else if (daysInEachMonth[monthIndex] == 31) {\n      if (day >= dayIndex && day < 32) {\n        JSXforDayArray.push( /*#__PURE__*/_jsxDEV(\"button\", {\n          className: websiteStyle.dayButton,\n          type: \"button\",\n          children: day\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }, this));\n      } else {\n        JSXforDayArray.push( /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: true,\n          className: websiteStyle.dayButton,\n          type: \"button\",\n          children: day\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }, this));\n      }\n    }\n  }\n  return JSXforDayArray;\n}\n;\nconst daySelectJSX = generateDaySelectJSX(2);\nexport default class DateSelector extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      month: currentMonth,\n      day: currentDate,\n      year: currentYear\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: staticFeatures.dateSelectContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: staticFeatures.dayGrid,\n        children: daySelectJSX\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: staticFeatures.monthSelectorContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: websiteStyle.monthArrowButton,\n          type: \"button\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faChevronLeft\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 82\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: websiteStyle.monthDisplay,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: websiteStyle.centerMonthText,\n            children: this.state.month\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: websiteStyle.monthArrowButton,\n          type: \"button\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faChevronRight\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 82\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","FontAwesomeIcon","faChevronLeft","faChevronRight","configData","staticFeatures","modernStyle","jsxDEV","_jsxDEV","websiteStyle","STYLE","months","daysInEachMonth","currentDate","Date","currentYear","getFullYear","currentMonth","parseInt","String","getMonth","padStart","currentMonthIndex","currentDay","getDate","console","log","generateDaySelectJSX","monthIndex","JSXforDayArray","dayIndex","day","push","className","dayButton","type","children","fileName","_jsxFileName","lineNumber","columnNumber","disabled","daySelectJSX","DateSelector","constructor","props","state","month","year","render","dateSelectContainer","dayGrid","monthSelectorContainer","monthArrowButton","icon","monthDisplay","centerMonthText"],"sources":["C:/Users/joebr_000.HP/Desktop/University/Final year/Final year project/commerical-web-app/client/src/components/date-select.component.js"],"sourcesContent":["//This component is a date selecting widget.\r\nimport React, { Component } from 'react';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n//FontAwesome icons for buttons\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faChevronLeft, faChevronRight} from '@fortawesome/free-solid-svg-icons'\r\n\r\n//Loading configuration\r\nimport configData from '../config/barber-site.config.json';\r\n\r\n//Loading all styling modules\r\nimport staticFeatures from \"../css-modules/static.module.css\";\r\nimport modernStyle from \"../css-modules/modern.module.css\";\r\n\r\n//Determine website styling module from the config file\r\nconst websiteStyle = (function() {\r\n  if (configData.STYLE === \"modern\"){\r\n    return modernStyle\r\n  }\r\n})();\r\n\r\n//This is needed data for the date selector\r\n\r\nconst months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\nconst daysInEachMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n\r\nvar currentDate = new Date();\r\n\r\nvar currentYear = currentDate.getFullYear();\r\nvar currentMonth = months[parseInt(String(currentDate.getMonth() + 1).padStart(2, '0') - 1)];\r\nvar currentMonthIndex = parseInt(String(currentDate.getMonth() + 1).padStart(2, '0') - 1);\r\nvar currentDay = String(currentDate.getDate()).padStart(2, '0');\r\n\r\nconsole.log(currentMonthIndex);\r\n\r\n//Generating JSX for date select grid.\r\nfunction generateDaySelectJSX(monthIndex) {\r\n  var JSXforDayArray = [];\r\n\r\n  //Conditional statements for button active or disabled depending on the days in the selected month, and whether it is past that date in time\r\n  var dayIndex;\r\n\r\n  if (monthIndex > currentMonthIndex){\r\n    dayIndex = 0;\r\n  }else if (monthIndex == currentMonthIndex){\r\n    dayIndex = currentDay;\r\n  }else if (monthIndex < currentMonthIndex){\r\n    dayIndex = 32;\r\n  }\r\n\r\n  for (let day = 1; day < 32; day++){\r\n    if (daysInEachMonth[monthIndex] == 28){\r\n      if (day >= dayIndex && day < 29){\r\n        JSXforDayArray.push(<button className={websiteStyle.dayButton} type=\"button\">{day}</button>);\r\n      }\r\n      else{\r\n        JSXforDayArray.push(<button disabled className={websiteStyle.dayButton} type=\"button\">{day}</button>);\r\n      }\r\n    }else if (daysInEachMonth[monthIndex] == 30){\r\n      if (day >= dayIndex && day < 31){\r\n        JSXforDayArray.push(<button className={websiteStyle.dayButton} type=\"button\">{day}</button>);\r\n      }\r\n      else{\r\n        JSXforDayArray.push(<button disabled className={websiteStyle.dayButton} type=\"button\">{day}</button>);\r\n      }\r\n    }else if (daysInEachMonth[monthIndex] == 31){\r\n      if (day >= dayIndex && day < 32){\r\n        JSXforDayArray.push(<button className={websiteStyle.dayButton} type=\"button\">{day}</button>);\r\n      }\r\n      else{\r\n        JSXforDayArray.push(<button disabled className={websiteStyle.dayButton} type=\"button\">{day}</button>);\r\n      }\r\n    }\r\n  }\r\n\r\n  return JSXforDayArray;\r\n};\r\n\r\nconst daySelectJSX = generateDaySelectJSX(2);\r\n\r\nexport default class DateSelector extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {month: currentMonth,\r\n                  day: currentDate,\r\n                  year: currentYear\r\n                 };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div className={staticFeatures.dateSelectContainer}>\r\n            <div className={staticFeatures.dayGrid}>\r\n                {daySelectJSX}\r\n            </div> \r\n\r\n            <div className={staticFeatures.monthSelectorContainer}>\r\n                <button className={websiteStyle.monthArrowButton} type='button'> <FontAwesomeIcon icon={faChevronLeft} /> </button> \r\n\r\n                <div className={websiteStyle.monthDisplay}>\r\n                  <div className={websiteStyle.centerMonthText}>\r\n                    {this.state.month}\r\n                  </div>\r\n                </div>\r\n\r\n                <button className={websiteStyle.monthArrowButton} type='button'> <FontAwesomeIcon icon={faChevronRight} /> </button> \r\n            </div>\r\n\r\n        </div>\r\n    );\r\n  }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}