{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joebr_000.HP\\\\Desktop\\\\University\\\\Final year\\\\Final year project\\\\commerical-web-app\\\\client\\\\src\\\\components\\\\time-select.component.js\";\n//This component is a time selecting widget. You can retrieve the currently selected date using refs to it's state; state.minute & state.hour.\n\n//It has the properties day and month, the TimeSelector component will show the times appropiate for this date this date in\n//correspondence with the opening hours provided in config data, but by default show all times.\n\nimport React, { Component } from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n//Loading configuration\nimport configData from '../config/barber-site.config.json';\n\n//Loading all styling modules\nimport staticFeatures from \"../css-modules/static.module.css\";\nimport modernStyle from \"../css-modules/modern.module.css\";\n\n//Determine website styling module from the config file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst websiteStyle = function () {\n  if (configData.STYLE === \"modern\") {\n    return modernStyle;\n  }\n}();\n//This is needed data for the time selector\n//---- Read opening hours from config file\nconst openingHours = function () {\n  var openingTimes = [];\n  Object.keys(configData.OPENINGTIMES).forEach(day => {\n    var openClose = {\n      openHour: configData.OPENINGTIMES[day].slice(0, 2),\n      openMinute: configData.OPENINGTIMES[day].slice(3, 5),\n      closeHour: configData.OPENINGTIMES[day].slice(6, 8),\n      closeMinute: configData.OPENINGTIMES[day].slice(9, 11)\n    };\n    openingTimes.push(openClose);\n  });\n  return openingTimes;\n}();\nconst allHours = [...Array(25).keys()];\nconst minutes = [0, 15, 30, 45];\nvar currentDateTime = new Date();\n\n//For generating JSX for time select\nfunction generateHourSelectOptionsJSX(hours) {\n  var JSXArray = [];\n  function generateHourJSX(hour) {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: parseInt(hour),\n      children: hour\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 16\n    }, this);\n  }\n  for (var optionIndex = 0; optionIndex < hours.length; optionIndex++) {\n    //Convert to correct format for display\n    let hour2DigitFormat = hours[optionIndex].toLocaleString('en-US', {\n      minimumIntegerDigits: 2,\n      useGrouping: false\n    });\n    JSXArray.push(generateHourJSX(hour2DigitFormat));\n  }\n  return JSXArray;\n}\nexport default class TimeSelector extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    const daySelected = this.props.day;\n    const monthSelected = this.props.month;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        children: generateHourSelectOptionsJSX(allHours)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","configData","staticFeatures","modernStyle","jsxDEV","_jsxDEV","websiteStyle","STYLE","openingHours","openingTimes","Object","keys","OPENINGTIMES","forEach","day","openClose","openHour","slice","openMinute","closeHour","closeMinute","push","allHours","Array","minutes","currentDateTime","Date","generateHourSelectOptionsJSX","hours","JSXArray","generateHourJSX","hour","value","parseInt","children","fileName","_jsxFileName","lineNumber","columnNumber","optionIndex","length","hour2DigitFormat","toLocaleString","minimumIntegerDigits","useGrouping","TimeSelector","constructor","props","render","daySelected","monthSelected","month"],"sources":["C:/Users/joebr_000.HP/Desktop/University/Final year/Final year project/commerical-web-app/client/src/components/time-select.component.js"],"sourcesContent":["//This component is a time selecting widget. You can retrieve the currently selected date using refs to it's state; state.minute & state.hour.\r\n\r\n//It has the properties day and month, the TimeSelector component will show the times appropiate for this date this date in\r\n//correspondence with the opening hours provided in config data, but by default show all times.\r\n\r\nimport React, { Component } from 'react';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n//Loading configuration\r\nimport configData from '../config/barber-site.config.json';\r\n\r\n//Loading all styling modules\r\nimport staticFeatures from \"../css-modules/static.module.css\";\r\nimport modernStyle from \"../css-modules/modern.module.css\";\r\n\r\n//Determine website styling module from the config file\r\nconst websiteStyle = (function() {\r\n  if (configData.STYLE === \"modern\"){\r\n    return modernStyle\r\n  }\r\n})();\r\n//This is needed data for the time selector\r\n//---- Read opening hours from config file\r\nconst openingHours = (function() {\r\n    var openingTimes = []\r\n\r\n    Object.keys(configData.OPENINGTIMES).forEach(day => {\r\n        var openClose = {\r\n            openHour: configData.OPENINGTIMES[day].slice(0, 2),\r\n            openMinute: configData.OPENINGTIMES[day].slice(3, 5),\r\n            closeHour: configData.OPENINGTIMES[day].slice(6, 8),\r\n            closeMinute: configData.OPENINGTIMES[day].slice(9, 11)\r\n        }\r\n\r\n        openingTimes.push(openClose);\r\n    })\r\n    \r\n    return openingTimes;\r\n})();\r\n\r\nconst allHours = [...Array(25).keys()]\r\nconst minutes = [0, 15, 30, 45]\r\n\r\nvar currentDateTime = new Date();\r\n\r\n//For generating JSX for time select\r\nfunction generateHourSelectOptionsJSX(hours){\r\n    var JSXArray = [];\r\n\r\n    function generateHourJSX(hour){\r\n        return <option value={parseInt(hour)}>{hour}</option>\r\n    }\r\n\r\n    for (var optionIndex = 0; optionIndex < hours.length; optionIndex++){\r\n      //Convert to correct format for display\r\n      let hour2DigitFormat = hours[optionIndex].toLocaleString('en-US', {\r\n        minimumIntegerDigits: 2,\r\n        useGrouping: false\r\n      });\r\n\r\n      JSXArray.push(generateHourJSX(hour2DigitFormat));\r\n    } \r\n\r\n    return  JSXArray;\r\n}\r\n\r\n\r\nexport default class TimeSelector extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const daySelected = this.props.day;\r\n    const monthSelected = this.props.month;\r\n\r\n    return (\r\n        <div>\r\n            <select>\r\n                {generateHourSelectOptionsJSX(allHours)}\r\n            </select>\r\n        </div>\r\n    );\r\n  }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}